pico-8 cartridge // http://www.pico-8.com
version 29
__lua__
-- object oriented programming platformer example
-- modeled after maddy's celeste 2

function _init()
	-- create all objects on the map
	for x=0,16 do
		for y=0,16 do
			tile = mget(x,y)
			if tile ~= 0 and fget(tile) == 0 then
				create(types[tile],x*8,y*8)
			end
		end
	end
end

function _update60()
	-- input can be done in-line if it's short or if hitting token limit
	update_input()

	for o in all(objects) do
		o:update()
	end
end

function _draw()
	cls()

	-- draw tileset (i.e. map w/o objects)
	map(0,0,0,0,16,16,0b00000001)

	-- draw objects (draw player last)
	local p = nil
	for o in all(objects) do
		if o.base == player then p = o else o:draw() end
	end
	if p then p:draw() end
end

------------------------------------------
------------------------------------------
------------------------------------------
------------------------------------------
------------------------------------------

-->8
-- object
objects = {}
types = {}
-- a table with metatable "lookup" will, when indexing something it does
-- not contain, return the value at the index of its "base" table.
-- the "base" table can be thought of as that object's default values
lookup = {}
function lookup.__index(self,i)
	return self.base[i] 
end

-- the "base" object, with default values
object = {}
-- velocities
object.vel_x = 0
object.vel_y = 0
-- hitboxes
object.hit_x = 0
object.hit_y = 0
object.hit_w = 8
object.hit_h = 8 

-- can provide default functions, including update and draw
function object.update() end
function object.draw(self)
	-- w and h can be set to object fields instead of always being 1
	-- if bigger objects are desired
	spr(self.spr, self.x, self.y, 1, 1, self.flip_x, self.flip_y)
end

function object.move_x(self, x)
	-- move one pixel at a time until collide
	local mx = x
	local mxs = sgn(mx)
	while mx != 0 do
		if self:check_solid(mxs, 0) then
			return true
		end
		self.x += mxs
		mx -= mxs
	end
end

function object.move_y(self, y)
	-- move one pixel at a time until collide
	local my = y
	local mys = sgn(my)
	while my != 0 do
		if self:check_solid(0,mys) then
			return true
		end
		self.y += mys
		my -= mys
	end
end

function object.check_solid(self, ox, oy)
	-- check if hitbox touches solid tile
	for i = flr((ox + self.x + self.hit_x) / 8),flr((ox + self.x + self.hit_x + self.hit_w - 1) / 8) do
		for j = flr((oy + self.y + self.hit_y) / 8),flr((oy + self.y + self.hit_y + self.hit_h - 1) / 8) do
			add(debug,"(" .. i .. "," .. j .. ")")
			if fget(mget(i, j), 0) then
				return true
			end
		end
	end
	return false
end

-- creates an object of a given type at a given (pixel) location
function create(type, x, y) 
	local obj = {}
	--if type == nil then add(debug,"Did not initialize type!") end
	obj.base = type
	obj.x = x
	obj.y = y
	obj.id = x + 100*y	-- id is its location on map
	setmetatable(obj, lookup)
	add(objects, obj)
	-- initialize if this type of object has an initialization function
	if obj.init then obj.init(obj) end
	return obj
end

-- creates a new type based on a sprite
function new_type(spr)
	local obj = {}
	obj.spr = spr
	obj.base = object
	setmetatable(obj, lookup)
	types[spr] = obj
	return obj
end

------------------------------------------
------------------------------------------
------------------------------------------
------------------------------------------
------------------------------------------

-->8
-- objects
-- now that we've done all that work, we can make objects to interact with!
orb = new_type(2)

purple_face = new_type(3)
purple_face.t = 0
function purple_face.update(self)
	self.t += 1
	self.t %= 60
	self.dir = self.t >= 30 and 1 or -1
	self:move_y(self.dir)
end

-->8
-- player
-- its useful to have the player in its own tab/file
player = new_type(1)
function player.update(self)
	self.vel_x = input_x
	self:move_x(self.vel_x)
end


------------------------------------------
------------------------------------------
------------------------------------------
------------------------------------------
------------------------------------------

-->8
-- input
-- input can also go in its own tab/file
input_x = 0

function update_input()
	if btn(0) then input_x = -1
	elseif btn(1) then input_x = 1
	else input_x = 0
	end
end

__gfx__
0000000000aaaa000000000000222200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000aaaaaa00000000002222220000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700aa1aa1aa0008800022d22d22000cc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000aaaaaaaa008888002222222200cccc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000a1aaaa1a008888002d2222d200cccc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700aa1111aa0008800022dddd22000cc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000aaaaaa00000000002222220000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000aaaa000000000000222200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
50000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
50000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
50000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
50000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
50000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
50000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
1010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000003000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1000000001000000000000020000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
00020000000002005026050290502e050330503505036050380503805036050320502c05000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
